mongodb:
  # MongoDB connection settings
  uri: "mongodb://localhost:27017"
  database: "inventory"
  # Collections to watch
  collections:
    - name: "products"
      watch_filter: {}  # Optional aggregation pipeline stages
      topic: "inventory-transactions-topic"
      deduplication:
        enabled: true
        memory_ttl: 3600  # 1 hour
        memory_max_size: 10000  # Maximum number of messages to keep in memory
        persistent_enabled: true
        persistent_ttl: 86400  # 24 hours
        cleanup_interval: 3600  # Clean up every hour
    - name: "transactions"
      watch_filter: {}
      topic: "inventory-updates-topic"
      deduplication:
        enabled: true
        memory_ttl: 7200  # 2 hours
        memory_max_size: 20000  # Larger cache for high-volume collection
        persistent_enabled: true
        persistent_ttl: 172800  # 48 hours
        cleanup_interval: 3600
  # Connection options
  options:
    max_pool_size: 100
    min_pool_size: 10
    max_idle_time_ms: 10000
    connect_timeout_ms: 20000
    server_selection_timeout_ms: 30000
    retry_writes: true
    w: "majority"

pubsub:
  # Google Cloud project settings
  project_id: "your-project-id"
  # Default topic settings
  default_topic_settings:
    message_retention_duration: "7d"
    message_storage_policy:
      allowed_persistence_regions:
        - "us-central1"
  # Publisher settings
  publisher:
    batch_settings:
      max_messages: 100
      max_bytes: 1048576  # 1MB
      max_latency: 0.1    # seconds
    retry_settings:
      initial_retry_delay: 0.1
      retry_delay_multiplier: 1.3
      max_retry_delay: 60
      max_attempts: 5
    circuit_breaker:
      failure_threshold: 5
      reset_timeout: 60.0
      half_open_max_calls: 3
    backpressure:
      # Token bucket settings
      tokens_per_second: 1000.0  # Base rate limit
      bucket_size: 2000  # Maximum burst size
      min_tokens_per_second: 100.0  # Minimum rate during heavy backpressure
      max_tokens_per_second: 5000.0  # Maximum rate during light load
      
      # Adaptive rate adjustment
      error_decrease_factor: 0.8  # Multiply rate by this on errors
      success_increase_factor: 1.1  # Multiply rate by this on success
      rate_update_interval: 5.0  # Seconds between rate adjustments
      
      # Monitoring
      metrics_window_size: 100  # Number of operations to track for metrics
  # Status topic for heartbeat messages
  status_topic: "mongodb-connector-status"

firestore:
  # Resume token collection settings
  collection: "resumeTokens"
  # Document TTL in seconds (30 days)
  ttl: 2592000

monitoring:
  # Structured logging settings
  logging:
    level: "INFO"
    format: "json"
    handlers:
      - type: "console"
      - type: "file"
        filename: "connector.log"
        max_bytes: 10485760  # 10MB
        backup_count: 5
    # Log sampling configuration
    sampling:
      enabled: true
      default_rate: 1.0
      rules:
        DEBUG:
          "change_event_processed":
            rate: 0.1
            strategy: "probabilistic"
        INFO:
          "batch_published":
            rate: 0.5
            strategy: "rate_limiting"
            ttl: 3600
  # OpenTelemetry settings
  tracing:
    service_name: "mongo-connector"
    endpoint: "localhost:4317"
  metrics_enabled: true
  traces_enabled: false

health:
  # Health check settings
  endpoints:
    health: "/health"
    readiness: "/readiness"
    metrics: "/metrics"
  # Readiness probe settings
  readiness:
    timeout: 5
    interval: 30
    failure_threshold: 3
  # Heartbeat settings
  heartbeat:
    interval: 30  # seconds
    enabled: true

retry:
  # Connection retry settings
  initial_interval: 1.0
  max_interval: 60.0
  multiplier: 2.0
  max_attempts: 5

# Resource monitoring and optimization configuration
resource:
  enabled: true  # Enable resource monitoring
  
  # Monitoring settings
  monitoring_interval: 30.0  # Check resources every 30 seconds
  log_interval: 300.0  # Log detailed metrics every 5 minutes
  
  # Memory thresholds
  memory_warning_threshold: 0.65  # 65% memory utilization
  memory_critical_threshold: 0.80  # 80% memory utilization
  memory_emergency_threshold: 0.90  # 90% memory utilization
  
  # CPU thresholds
  cpu_warning_threshold: 0.70  # 70% CPU utilization
  cpu_critical_threshold: 0.85  # 85% CPU utilization
  cpu_emergency_threshold: 0.95  # 95% CPU utilization
  
  # Optimization settings
  enable_gc_optimization: true  # Enable garbage collection optimization
  gc_threshold_adjustment: true  # Adjust GC thresholds based on memory pressure
  enable_object_tracking: false  # Track object counts by type (disabled by default for performance)
  tracked_types:  # Types to track if object tracking is enabled
    - "dict"
    - "ChangeStream"
    - "Message"
    - "bytes"
  
  # Response actions
  enable_auto_response: true  # Enable automatic resource optimization
  
  # Circuit breaker settings
  circuit_breaker_enabled: true  # Enable circuit breaker for resource exhaustion
  circuit_open_time: 30.0  # Keep circuit open for 30 seconds on emergency 